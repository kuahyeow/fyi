<% @title = h(@info_request.title) %>

<% if @info_request.prominence == 'hidden' %>
    <p id="hidden_request">
    This request has prominence 'hidden'. You can only see it because you are logged
    in as a super user.
    </p>
<% end %>
<% if @info_request.prominence == 'requester_only' %>
    <p id="hidden_request">
    This request is hidden, so that only you the requester can see it. Please
    <a href="/help/contact">contact us</a> if you are not sure why.
    </p>
<% end %>


<% if @update_status || @info_request.awaiting_description %>
    <div class="describe_state_form" id="describe_state_form_1">
    <%= render :partial => 'describe_state', :locals => { :id_suffix => "1" } %>
    </div>
<% end %>

<%= render :partial => 'sidebar' %>

<div id="request_main">
    <h1><%=@title%></h1>

    <p class="subtitle">
    <%=h @info_request.law_used_with_a%> 
    <% if !@user.nil? && @user.admin_page_links? %>
        (<%= link_to "admin", request_admin_url(@info_request) %>)
    <% end %>
    to 
    <%= public_body_link(@info_request.public_body) %>
    by 
    <%= user_link(@info_request.user) %>
    </p>

    <p id="request_status" class="request_icon_line icon_<%= @info_request.calculate_status %>">
    <% if @info_request.awaiting_description %>
        <% if @is_owning_user %>
            Please <strong>answer the question above</strong> so we know whether the 
            <%= MySociety::Format.fancy_pluralize(@new_responses_count, 'recent response contains', 'recent responses contain') %> useful information.
        <% else %>
            This request has an <strong>unknown status</strong>. 
            <% if @old_unclassified %>
              We're waiting for someone to read 
              <%= MySociety::Format.fancy_pluralize(@new_responses_count, 'a recent response', 'recent responses') %>
              and update the status accordingly. Perhaps <strong>you</strong> might like to help out by doing that?
            <% else %>
              We're waiting for
              <%= user_link(@info_request.user) %> to read 
              <%= MySociety::Format.fancy_pluralize(@new_responses_count, 'a recent response', 'recent responses') %> 
              and update the status.
            <% end %>
        <% end %>
    <% elsif @status == 'waiting_response' %>
        Currently <strong>waiting for a response</strong> from <%= public_body_link(@info_request.public_body) %>,
        they <%= link_to "must respond", about_url + "#quickly_response" %> 
        promptly but no later than <strong><%= simple_date(@info_request.date_response_required_by) %></strong>.
    <% elsif @status == 'waiting_response_overdue' %>
        Currently <strong>overdue a response</strong> from <%=
        public_body_link(@info_request.public_body) %>. By law,
        the response had to be prompt but
        <%= link_to "no later", about_url + "#quickly_response" %>
        than <strong><%= simple_date(@info_request.date_response_required_by) %></strong>.

        <% if @info_request.days_overdue > 14 %>
            They are <%= @info_request.days_overdue.to_i %> days late, you
            can <strong>complain</strong> by
            <%= link_to "requesting an internal review", show_response_no_followup_url(:id => @info_request.id, :incoming_message_id => nil) + "?internal_review=1#followup" %>.
        <% end %>

    <% elsif @status == 'not_held' %>
        <%= public_body_link(@info_request.public_body) %> <strong>did not have</strong> the information requested.
    <% elsif @status == 'rejected' %>
        The request was <strong>rejected</strong> by <%= public_body_link(@info_request.public_body) %>.
    <% elsif @status == 'successful' %>
        The request was <strong>successful</strong>.
    <% elsif @status == 'partially_successful' %>
        The request was <strong>partially successful</strong>.
    <% elsif @status == 'waiting_clarification' %>
        <% if @is_owning_user %>
            <%=h @info_request.public_body.name %> is <strong>waiting for your clarification</strong>. 
            Please
              <%= link_to "send a follow up message", respond_to_last_url(@info_request) + '#followup' %>.
        <% else %>
            The request is <strong>waiting for clarification</strong>. 
            If you are
            <%= user_link(@info_request.user) %>, please
            <%= link_to "sign in", signin_url(:r => request.request_uri) %> to send a follow up message.
        <% end %>
    <% elsif @status == 'gone_postal' %>
        The authority would like to / has <strong>responded by post</strong> to this request.
    <% elsif @status == 'internal_review' %>
        Waiting for an <strong>internal review</strong> by <%= public_body_link(@info_request.public_body) %> of their handling of this request.
    <% elsif @status == 'error_message' %>
        There was a <strong>delivery error</strong> or similar, which needs fixing by the WhatDoTheyKnow team.
    <% elsif @status == 'requires_admin' %>
        This request has had an unusual response, and <strong>requires attention</strong> from the WhatDoTheyKnow team.
    <% elsif @status == 'user_withdrawn' %>
        This request has been <strong>withdrawn</strong> by the person who made it. 
        There may be an explanation in an annotation below.
    <% else %>
        <% raise "unknown status " + @status %>
    <% end %>
    </p>

    <% for info_request_event in @info_request_events %>
        <% if info_request_event.visible %>
            <%= render :partial => 'correspondence', :locals => { :info_request_event => info_request_event } %>
        <% end %>
    <% end %>

    <% if @info_request.awaiting_description %>
        <div class="describe_state_form" id="describe_state_form_2">
        <%= render :partial => 'describe_state', :locals => { :id_suffix => "2" } %>
        </div>
    <% end %>

    <%= render :partial => 'after_actions' %>
</div>

